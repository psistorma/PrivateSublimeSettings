!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ASYNC_STATUS_KEY	.\cmd_eval.py	/^ASYNC_STATUS_KEY = "userstorm_async_code_status_key"$/;"	v
ASYNC_STATUS_KEY	.\cmd_run_shell.py	/^ASYNC_STATUS_KEY = "userstorm_async_cmd_status_key"$/;"	v
Asset	.\cmd_search_ref.py	/^from MUtils.FileDataSrc import JsonSrcManager, Asset$/;"	i
Asset	.\cmd_storm_palette.py	/^from MUtils.FileDataSrc import JsonAssetSrcManager, Asset$/;"	i
Context	.\cmd_storm_palette.py	/^from SublimeUtils.Context import Context$/;"	i
DYN_SRC_FILENAME	.\cmd_search_ref.py	/^DYN_SRC_FILENAME = "default.dyn.md"$/;"	v
Data	.\cmd_run_shell.py	/^from MUtils import Data, Os, Input, Str, Exp, Thread$/;"	i
Data	.\cmd_search_ref.py	/^from MUtils import Os, Str, Data, Input, Exp, MarkDownInfo$/;"	i
Data	.\cmd_storm_palette.py	/^from MUtils import Os, Str, Data, Input, Exp$/;"	i
DynamicUpdate	.\StormErrorPanel.py	/^def DynamicUpdate(infos, **notifyKwds):$/;"	f
EvalPythonCodeCommand	.\cmd_eval.py	/^class EvalPythonCodeCommand(sublime_plugin.WindowCommand):$/;"	c
EvalPythonCodePromptCommand	.\cmd_eval.py	/^class EvalPythonCodePromptCommand(sublime_plugin.WindowCommand):$/;"	c
Exp	.\cmd_eval.py	/^from MUtils import Thread, Input, Str, Exp$/;"	i
Exp	.\cmd_run_shell.py	/^from MUtils import Data, Os, Input, Str, Exp, Thread$/;"	i
Exp	.\cmd_search_ref.py	/^from MUtils import Os, Str, Data, Input, Exp, MarkDownInfo$/;"	i
Exp	.\cmd_snippet_base.py	/^from MUtils import Exp$/;"	i
Exp	.\cmd_storm_palette.py	/^from MUtils import Os, Str, Data, Input, Exp$/;"	i
FILL_CHAR	.\StormErrorPanel.py	/^    FILL_CHAR = "*"$/;"	v	class:Info
HIDDEN_ASSET_TOKEN	.\cmd_search_ref.py	/^HIDDEN_ASSET_TOKEN = "hidden-"$/;"	v
Info	.\StormErrorPanel.py	/^class Info(object):$/;"	c
InfoSection	.\StormErrorPanel.py	/^InfoSection = namedtuple("InfoSection", "title, content, isOutput")$/;"	v
Input	.\cmd_eval.py	/^from MUtils import Thread, Input, Str, Exp$/;"	i
Input	.\cmd_run_shell.py	/^from MUtils import Data, Os, Input, Str, Exp, Thread$/;"	i
Input	.\cmd_search_ref.py	/^from MUtils import Os, Str, Data, Input, Exp, MarkDownInfo$/;"	i
Input	.\cmd_storm_palette.py	/^from MUtils import Os, Str, Data, Input, Exp$/;"	i
JsonAssetSrcManager	.\cmd_storm_palette.py	/^from MUtils.FileDataSrc import JsonAssetSrcManager, Asset$/;"	i
JsonSrcManager	.\cmd_search_ref.py	/^from MUtils.FileDataSrc import JsonSrcManager, Asset$/;"	i
ManageSnippetBaseCommand	.\cmd_snippet_base.py	/^class ManageSnippetBaseCommand(sublime_plugin.WindowCommand):$/;"	c
MarkDownInfo	.\cmd_search_ref.py	/^from MUtils import Os, Str, Data, Input, Exp, MarkDownInfo$/;"	i
MulRunCommand	.\cmd_mul_run.py	/^class MulRunCommand(sublime_plugin.TextCommand):$/;"	c
MulRunWindowCommand	.\cmd_mul_run.py	/^class MulRunWindowCommand(sublime_plugin.WindowCommand):$/;"	c
Os	.\cmd_run_shell.py	/^from MUtils import Data, Os, Input, Str, Exp, Thread$/;"	i
Os	.\cmd_search_ref.py	/^from MUtils import Os, Str, Data, Input, Exp, MarkDownInfo$/;"	i
Os	.\cmd_storm_palette.py	/^from MUtils import Os, Str, Data, Input, Exp$/;"	i
PROJECT_SRC_BASENAME	.\cmd_search_ref.py	/^PROJECT_SRC_BASENAME = ".search_ref"$/;"	v
PalKeySrcManager	.\cmd_storm_palette.py	/^class PalKeySrcManager(JsonAssetSrcManager):$/;"	c
Panel	.\cmd_eval.py	/^from SublimeUtils import Setting, Panel$/;"	i
Panel	.\cmd_run_shell.py	/^from SublimeUtils import Setting, Panel$/;"	i
Panel	.\cmd_search_ref.py	/^from .SublimeUtils import Setting, Panel$/;"	i
Panel	.\cmd_storm_palette.py	/^from SublimeUtils import Setting, Panel, WView, Project$/;"	i
PrintSublimeVariableCommand	.\cmd_run_shell.py	/^class PrintSublimeVariableCommand(sublime_plugin.WindowCommand):$/;"	c
Project	.\cmd_storm_palette.py	/^from SublimeUtils import Setting, Panel, WView, Project$/;"	i
RefKeySrcManager	.\cmd_search_ref.py	/^class RefKeySrcManager(SrcManager):$/;"	c
Rm	.\cmd_search_ref.py	/^Rm = PalKeySrcManager(SRC_FILE_EXT)$/;"	v
RunShellCmdCommand	.\cmd_run_shell.py	/^class RunShellCmdCommand(sublime_plugin.WindowCommand):$/;"	c
RunShellCmdPromptCommand	.\cmd_run_shell.py	/^class RunShellCmdPromptCommand(sublime_plugin.WindowCommand):$/;"	c
SECTION_FILL_CHAR	.\StormErrorPanel.py	/^    SECTION_FILL_CHAR = "-"$/;"	v	class:Info
SKEY	.\StormErrorPanel.py	/^SKEY = "StormErrorPanel"$/;"	v
SKEY	.\cmd_run_shell.py	/^SKEY = "RunShellCmd"$/;"	v
SKEY	.\cmd_storm_palette.py	/^SKEY = "storm_palette"$/;"	v
Setting	.\StormErrorPanel.py	/^from SublimeUtils import Setting$/;"	i
Setting	.\cmd_eval.py	/^from SublimeUtils import Setting, Panel$/;"	i
Setting	.\cmd_run_shell.py	/^from SublimeUtils import Setting, Panel$/;"	i
Setting	.\cmd_search_ref.py	/^from .SublimeUtils import Setting, Panel$/;"	i
Setting	.\cmd_storm_palette.py	/^from SublimeUtils import Setting, Panel, WView, Project$/;"	i
StorMErrorPanel	.\StormErrorPanel.py	/^class StorMErrorPanel(object):$/;"	c
StormErrorPanel	.\cmd_eval.py	/^from . import StormErrorPanel$/;"	i
StormErrorPanel	.\cmd_run_shell.py	/^from . import StormErrorPanel$/;"	i
StormErrorPanelFlushCommand	.\StormErrorPanel.py	/^class StormErrorPanelFlushCommand(sublime_plugin.TextCommand):$/;"	c
StormErrorPanelHideCommand	.\StormErrorPanel.py	/^class StormErrorPanelHideCommand(sublime_plugin.TextCommand):$/;"	c
StormErrorPanelShowCommand	.\StormErrorPanel.py	/^class StormErrorPanelShowCommand(sublime_plugin.WindowCommand):$/;"	c
StormPaletteCommand	.\cmd_storm_palette.py	/^class StormPaletteCommand(sublime_plugin.WindowCommand):$/;"	c
StormPaletteEventListener	.\cmd_storm_palette.py	/^class StormPaletteEventListener(sublime_plugin.EventListener):$/;"	c
StormPaletteRecordCommand	.\cmd_storm_palette.py	/^class StormPaletteRecordCommand(sublime_plugin.WindowCommand):$/;"	c
Str	.\cmd_eval.py	/^from MUtils import Thread, Input, Str, Exp$/;"	i
Str	.\cmd_run_shell.py	/^from MUtils import Data, Os, Input, Str, Exp, Thread$/;"	i
Str	.\cmd_search_ref.py	/^from MUtils import Os, Str, Data, Input, Exp, MarkDownInfo$/;"	i
Str	.\cmd_storm_palette.py	/^from MUtils import Os, Str, Data, Input, Exp$/;"	i
Thread	.\cmd_eval.py	/^from MUtils import Thread, Input, Str, Exp$/;"	i
Thread	.\cmd_run_shell.py	/^from MUtils import Data, Os, Input, Str, Exp, Thread$/;"	i
WIDTH	.\StormErrorPanel.py	/^    WIDTH = 80$/;"	v	class:Info
WView	.\cmd_storm_palette.py	/^from SublimeUtils import Setting, Panel, WView, Project$/;"	i
__init__	.\StormErrorPanel.py	/^    def __init__(self):$/;"	m	class:StorMErrorPanel
__init__	.\StormErrorPanel.py	/^    def __init__(self, header, *sections):$/;"	m	class:Info
__init__	.\cmd_eval.py	/^    def __init__(self, *args):$/;"	m	class:EvalPythonCodeCommand
__init__	.\cmd_eval.py	/^    def __init__(self, *args):$/;"	m	class:EvalPythonCodePromptCommand
__init__	.\cmd_run_shell.py	/^    def __init__(self, *args):$/;"	m	class:RunShellCmdCommand
__init__	.\cmd_run_shell.py	/^    def __init__(self, *args):$/;"	m	class:RunShellCmdPromptCommand
__init__	.\cmd_search_ref.py	/^    def __init__(self, *arg):$/;"	m	class:RefKeySrcManager
__init__	.\cmd_snippet_base.py	/^    def __init__(self, *args):$/;"	m	class:ManageSnippetBaseCommand
__init__	.\cmd_storm_palette.py	/^    def __init__(self, *arg, **kwds):$/;"	m	class:PalKeySrcManager
__init__	.\cmd_storm_palette.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:StormPaletteCommand
__init__	.\cmd_storm_palette.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:StormPaletteRecordCommand
_transform	.\cmd_snippet_base.py	/^    def _transform(self):$/;"	m	class:ManageSnippetBaseCommand
alignAssetKey	.\cmd_storm_palette.py	/^    def alignAssetKey(view, assets):$/;"	m	class:StormPaletteCommand
am	.\cmd_storm_palette.py	/^am = PalKeySrcManager(ps.opts("src_file_ext"))$/;"	v
assets	.\cmd_storm_palette.py	/^    def assets(self):$/;"	m	class:StormPaletteCommand
buildAssetKey	.\cmd_search_ref.py	/^    def buildAssetKey(key, val, srcFile):$/;"	m	class:RefKeySrcManager
close	.\StormErrorPanel.py	/^    def close():$/;"	m	class:StorMErrorPanel
doWork	.\cmd_eval.py	/^    def doWork(self, **kwds):$/;"	m	class:EvalPythonCodeCommand
doWork	.\cmd_run_shell.py	/^    def doWork(commands, run_mode, win_mode, run_opts, dyn_report_mul, **kwds):$/;"	m	class:RunShellCmdCommand
doWorkAsnc	.\cmd_eval.py	/^    def doWorkAsnc(self, view, **kwds):$/;"	m	class:EvalPythonCodeCommand
doWorkAsnc	.\cmd_run_shell.py	/^    def doWorkAsnc(self, view, workParams, **kwds):$/;"	m	class:RunShellCmdCommand
dumpDynFile	.\cmd_storm_palette.py	/^    def dumpDynFile(self, dynFilePath, dynFileDict, belong_to_project):$/;"	m	class:StormPaletteRecordCommand
eraseAsset	.\cmd_storm_palette.py	/^    def eraseAsset(dynFileDict, key):$/;"	m	class:StormPaletteRecordCommand
eraseRecord	.\cmd_storm_palette.py	/^    def eraseRecord(self, key, belong_to_project):$/;"	m	class:StormPaletteRecordCommand
errorPanel	.\StormErrorPanel.py	/^errorPanel = StorMErrorPanel()$/;"	v
exec_command	.\cmd_mul_run.py	/^    def exec_command(self, command):$/;"	m	class:MulRunCommand
exec_command	.\cmd_mul_run.py	/^    def exec_command(self, command):$/;"	m	class:MulRunWindowCommand
filterAssets	.\cmd_storm_palette.py	/^    def filterAssets(self, view, assets):$/;"	m	class:StormPaletteCommand
flush	.\StormErrorPanel.py	/^    def flush(self):$/;"	m	class:StorMErrorPanel
fn	.\cmd_eval.py	/^import fn$/;"	i
fn	.\cmd_run_shell.py	/^import fn$/;"	i
fn	.\cmd_storm_palette.py	/^import fn$/;"	i
formatHeaderLine	.\StormErrorPanel.py	/^    def formatHeaderLine(self):$/;"	m	class:Info
formatSectionHeader	.\StormErrorPanel.py	/^    def formatSectionHeader(title):$/;"	m	class:Info
formatSectionLines	.\StormErrorPanel.py	/^    def formatSectionLines(sec):$/;"	m	class:Info
formatTolineData	.\StormErrorPanel.py	/^    def formatTolineData(infos):$/;"	m	class:StorMErrorPanel
ft	.\StormErrorPanel.py	/^import functools as ft$/;"	i
fwNotify	.\StormErrorPanel.py	/^def fwNotify(f):$/;"	f
getDynAssetFile	.\cmd_search_ref.py	/^    def getDynAssetFile(assetPath):$/;"	m	class:RefKeySrcManager
getDynFile	.\cmd_storm_palette.py	/^    def getDynFile(self, belong_to_project):$/;"	m	class:StormPaletteRecordCommand
getLineNumerExt	.\cmd_storm_palette.py	/^    def getLineNumerExt(view):$/;"	m	class:StormPaletteCommand
getProjectAssetPath	.\cmd_search_ref.py	/^    def getProjectAssetPath(window, makeIfNotExist=False):$/;"	m	class:RefKeySrcManager
getStaticAssetPath	.\cmd_search_ref.py	/^    def getStaticAssetPath():$/;"	m	class:RefKeySrcManager
get_view	.\StormErrorPanel.py	/^    def get_view(self):$/;"	m	class:StorMErrorPanel
hasOutput	.\StormErrorPanel.py	/^    def hasOutput(self):$/;"	m	class:Info
initSettings	.\StormErrorPanel.py	/^def initSettings():$/;"	f
initSettings	.\cmd_run_shell.py	/^def initSettings():$/;"	f
initSettings	.\cmd_storm_palette.py	/^def initSettings():$/;"	f
invokeAsset	.\cmd_storm_palette.py	/^    def invokeAsset(self, asset, regAsLastKey=False):$/;"	m	class:StormPaletteCommand
invokeKey	.\cmd_storm_palette.py	/^    def invokeKey(self, key):$/;"	m	class:StormPaletteCommand
isDynFile	.\cmd_search_ref.py	/^    def isDynFile(srcFilePath):$/;"	m	class:RefKeySrcManager
isHidden	.\cmd_search_ref.py	/^    def isHidden(key):$/;"	m	class:RefKeySrcManager
isVisible	.\StormErrorPanel.py	/^    def isVisible(window=None):$/;"	m	class:StorMErrorPanel
iterKey	.\cmd_storm_palette.py	/^    def iterKey(self, title, keyHead, iterNext):$/;"	m	class:StormPaletteCommand
json	.\cmd_storm_palette.py	/^import json$/;"	i
makeAssetFileAsset	.\cmd_storm_palette.py	/^    def makeAssetFileAsset():$/;"	m	class:StormPaletteCommand
makeAssetKey	.\cmd_search_ref.py	/^    def makeAssetKey(key, level, srcFile):$/;"	m	class:RefKeySrcManager
makeReadableTitle	.\cmd_storm_palette.py	/^    def makeReadableTitle(title, candidate):$/;"	m	class:StormPaletteCommand
makeVirtualAssets	.\cmd_storm_palette.py	/^    def makeVirtualAssets(self):$/;"	m	class:StormPaletteCommand
metaInfo	.\cmd_storm_palette.py	/^metaInfo = Data.toNamedTuple($/;"	v
namedtuple	.\StormErrorPanel.py	/^from collections import namedtuple$/;"	i
needTransf	.\cmd_storm_palette.py	/^    def needTransf(self, obj, isKey):$/;"	m	class:StormPaletteRecordCommand
onGotInput	.\cmd_eval.py	/^    def onGotInput(self, content):$/;"	m	class:EvalPythonCodePromptCommand
onGotInput	.\cmd_run_shell.py	/^    def onGotInput(self, content):$/;"	m	class:RunShellCmdPromptCommand
onQuickPanelDone	.\cmd_storm_palette.py	/^    def onQuickPanelDone(self, index):$/;"	m	class:StormPaletteCommand
on_load_async	.\cmd_storm_palette.py	/^    def on_load_async(view):$/;"	m	class:StormPaletteEventListener
on_post_save_async	.\cmd_storm_palette.py	/^    def on_post_save_async(view):$/;"	m	class:StormPaletteEventListener
opGetBase	.\cmd_snippet_base.py	/^    def opGetBase(self, args):$/;"	m	class:ManageSnippetBaseCommand
opSetBase	.\cmd_snippet_base.py	/^    def opSetBase(self):$/;"	m	class:ManageSnippetBaseCommand
open	.\StormErrorPanel.py	/^    def open(self, window=None):$/;"	m	class:StorMErrorPanel
os	.\cmd_storm_palette.py	/^import os$/;"	i
parseFile	.\cmd_search_ref.py	/^    def parseFile(self, srcFile):$/;"	m	class:RefKeySrcManager
pathToken	.\cmd_search_ref.py	/^    def pathToken(srcFile):$/;"	m	class:RefKeySrcManager
plugin_loaded	.\StormErrorPanel.py	/^def plugin_loaded():$/;"	f
plugin_loaded	.\cmd_run_shell.py	/^def plugin_loaded():$/;"	f
plugin_loaded	.\cmd_storm_palette.py	/^def plugin_loaded():$/;"	f
plugin_unloaded	.\StormErrorPanel.py	/^def plugin_unloaded():$/;"	f
plugin_unloaded	.\cmd_run_shell.py	/^def plugin_unloaded():$/;"	f
plugin_unloaded	.\cmd_storm_palette.py	/^def plugin_unloaded():$/;"	f
prjInfo	.\cmd_storm_palette.py	/^prjInfo = Project.ProjectInfo()$/;"	v
ps	.\StormErrorPanel.py	/^ps = Setting.PluginSetting(SKEY)$/;"	v
ps	.\cmd_run_shell.py	/^ps = Setting.PluginSetting(SKEY)$/;"	v
ps	.\cmd_storm_palette.py	/^ps = Setting.PluginSetting(SKEY)$/;"	v
pwa	.\cmd_storm_palette.py	/^pwa = Project.ProjectWiseAsset(metaInfo, am, ps, prjInfo)$/;"	v
re	.\StormErrorPanel.py	/^import re$/;"	i
re	.\cmd_run_shell.py	/^import re$/;"	i
re	.\cmd_snippet_base.py	/^import re$/;"	i
recordContent	.\cmd_storm_palette.py	/^    def recordContent(self, key, content, belong_to_project):$/;"	m	class:StormPaletteRecordCommand
regionToItems	.\cmd_snippet_base.py	/^    def regionToItems(sRegion):$/;"	m	class:ManageSnippetBaseCommand
reportStatus	.\cmd_search_ref.py	/^    def reportStatus(self, message):$/;"	m	class:RefKeySrcManager
run	.\StormErrorPanel.py	/^    def run(self, **kwds):$/;"	m	class:StormErrorPanelShowCommand
run	.\StormErrorPanel.py	/^    def run(self, edit):$/;"	m	class:StormErrorPanelHideCommand
run	.\StormErrorPanel.py	/^    def run(self, edit, **kwds):$/;"	m	class:StormErrorPanelFlushCommand
run	.\cmd_eval.py	/^    def run(self, **kwds):$/;"	m	class:EvalPythonCodePromptCommand
run	.\cmd_eval.py	/^    def run(self, qAndaDict=None, **kwds):$/;"	m	class:EvalPythonCodeCommand
run	.\cmd_mul_run.py	/^    def run(self, **args):$/;"	m	class:MulRunWindowCommand
run	.\cmd_mul_run.py	/^    def run(self, edit, **args):$/;"	m	class:MulRunCommand
run	.\cmd_run_shell.py	/^    def run(self):$/;"	m	class:PrintSublimeVariableCommand
run	.\cmd_run_shell.py	/^    def run(self, **kwds):$/;"	m	class:RunShellCmdPromptCommand
run	.\cmd_run_shell.py	/^    def run(self, qAndaDict=None, **kwds):$/;"	m	class:RunShellCmdCommand
run	.\cmd_snippet_base.py	/^    def run(self, **args):$/;"	m	class:ManageSnippetBaseCommand
run	.\cmd_storm_palette.py	/^    def run(self, **kwds):$/;"	m	class:StormPaletteCommand
run	.\cmd_storm_palette.py	/^    def run(self, qAndaDict=None, **kwds):$/;"	m	class:StormPaletteRecordCommand
sublime	.\StormErrorPanel.py	/^import sublime$/;"	i
sublime	.\cmd_eval.py	/^import sublime$/;"	i
sublime	.\cmd_mul_run.py	/^import sublime$/;"	i
sublime	.\cmd_run_shell.py	/^import sublime$/;"	i
sublime	.\cmd_search_ref.py	/^import sublime$/;"	i
sublime	.\cmd_snippet_base.py	/^import sublime$/;"	i
sublime	.\cmd_storm_palette.py	/^import sublime$/;"	i
sublime_plugin	.\StormErrorPanel.py	/^import sublime_plugin$/;"	i
sublime_plugin	.\cmd_eval.py	/^import sublime_plugin$/;"	i
sublime_plugin	.\cmd_mul_run.py	/^import sublime_plugin$/;"	i
sublime_plugin	.\cmd_run_shell.py	/^import sublime_plugin$/;"	i
sublime_plugin	.\cmd_search_ref.py	/^import sublime_plugin$/;"	i
sublime_plugin	.\cmd_snippet_base.py	/^import sublime_plugin$/;"	i
sublime_plugin	.\cmd_storm_palette.py	/^import sublime_plugin$/;"	i
traceback	.\cmd_eval.py	/^import traceback$/;"	i
transf	.\cmd_storm_palette.py	/^    def transf(self, obj, _):$/;"	m	class:StormPaletteRecordCommand
update	.\StormErrorPanel.py	/^    def update(self, *, data=None, window=None, show=True):$/;"	m	class:StorMErrorPanel
updateData	.\StormErrorPanel.py	/^    def updateData(self, data):$/;"	m	class:StorMErrorPanel
updateForProjectAssets	.\cmd_search_ref.py	/^    def updateForProjectAssets(self, window):$/;"	m	class:RefKeySrcManager
vBuildAssetKey	.\cmd_storm_palette.py	/^    def vBuildAssetKey(key, val, srcFile):$/;"	m	class:PalKeySrcManager
vIsDynFile	.\cmd_storm_palette.py	/^    def vIsDynFile(srcFilePath):$/;"	m	class:PalKeySrcManager
vReportStatus	.\cmd_storm_palette.py	/^    def vReportStatus(self, message):$/;"	m	class:PalKeySrcManager
wrapTitle	.\StormErrorPanel.py	/^    def wrapTitle(cls, title):$/;"	m	class:Info
wrapper	.\StormErrorPanel.py	/^    def wrapper(*args, **kwds):$/;"	f	function:fwNotify
